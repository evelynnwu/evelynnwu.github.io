import {
  t
} from "./chunk-IF7L6CXT.js";
import {
  require_react
} from "./chunk-6P6Q65E3.js";
import {
  __toESM
} from "./chunk-5WRI5ZAA.js";

// node_modules/react-split-flap-display/dist/index.js
var U = __toESM(require_react());
var import_react = __toESM(require_react());
import "C:/Users/evelynwu/personal-website/node_modules/react-split-flap-display/dist/index.css";
function Y(A) {
  var f, o, a = "";
  if (typeof A == "string" || typeof A == "number")
    a += A;
  else if (typeof A == "object")
    if (Array.isArray(A)) {
      var d = A.length;
      for (f = 0; f < d; f++)
        A[f] && (o = Y(A[f])) && (a && (a += " "), a += o);
    } else
      for (o in A)
        A[o] && (a && (a += " "), a += o);
  return a;
}
function C() {
  for (var A, f, o = 0, a = "", d = arguments.length; o < d; o++)
    (A = arguments[o]) && (f = Y(A)) && (a && (a += " "), a += f);
  return a;
}
var j = "_wrapper_kx11q_1";
function Z(A) {
  const { children: f, className: o, color: a, position: d, ...l } = A;
  return U.createElement("div", { ...l, className: C(j, o), "data-position": d, style: { "--color": a } }, f);
}
var K = "_half_tyicw_1";
var $ = "_halfFlip_tyicw_12";
function J(A) {
  const { children: f, className: o, position: a, ...d } = A;
  return import_react.default.createElement("div", { ...d, className: C(K, o), "data-position": a }, f);
}
function z(A) {
  const { children: f, className: o, color: a, direction: d, duration: l, ...V } = A;
  return import_react.default.createElement("div", { ...V, className: C($, o), "data-direction": d, style: { "--color": a, "--duration": l } }, f);
}
function W(A) {
  const { position: f, textColor: o, value: a } = A;
  return import_react.default.createElement(
    J,
    { position: f },
    import_react.default.createElement(Z, { position: f, color: o }, a)
  );
}
function q({ background: A, direction: f, duration: o, position: a, textColor: d, value: l }) {
  return import_react.default.createElement(
    z,
    { direction: f, duration: o, color: A },
    import_react.default.createElement(Z, { position: a, color: d }, l)
  );
}
var ee = "data:audio/mpeg;base64,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hGn5aTG3HgFfLTGIyp2H5UEf6TtOWETXWFmn2dqTz8+/kMvj2tUUWVM/rIX8UOWNBjL6/c7v26KCvwgmzqXUnaKXxGPQTKH9fp7IZmmsQc5sNsscR9aOQRiOfZ+UxG1TVquT3u9G6KVSykikhh67MW6S+wFpD7QK/FDFKKUNdeOngmijph61FGf5hL2mSr/5HPuXdm3JmYVWHW3X2RAkBZYs0gCXUcwLWgtAUsMqZYzXn+f5rS7gWiocgCg1AVBaDUVFhZmZihYWFa1VVVTpJFRUVFRU1rVVr4VaKKFhZmVa2KFhYWWoZmZr9mZhYWFhVVVVX///9VX+V/1r2//Zhb4ZmZmX2ZmZl/4ZmFXYNHfEoKgqCoNA1BUFlUxBTUUzLjEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//tQxOKD0OlZR/2EAAAAADSAAAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==";
var H = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
var Q = {};
(function(A) {
  (function() {
    var f = function() {
      this.init();
    };
    f.prototype = { init: function() {
      var e = this || o;
      return e._counter = 1e3, e._html5AudioPool = [], e.html5PoolSize = 10, e._codecs = {}, e._howls = [], e._muted = false, e._volume = 1, e._canPlayEvent = "canplaythrough", e._navigator = typeof window < "u" && window.navigator ? window.navigator : null, e.masterGain = null, e.noAudio = false, e.usingWebAudio = true, e.autoSuspend = true, e.ctx = null, e.autoUnlock = true, e._setup(), e;
    }, volume: function(e) {
      var n = this || o;
      if (e = parseFloat(e), n.ctx || g(), e !== void 0 && e >= 0 && e <= 1) {
        if (n._volume = e, n._muted)
          return n;
        n.usingWebAudio && n.masterGain.gain.setValueAtTime(e, o.ctx.currentTime);
        for (var t2 = 0; t2 < n._howls.length; t2++)
          if (!n._howls[t2]._webAudio)
            for (var r = n._howls[t2]._getSoundIds(), i = 0; i < r.length; i++) {
              var s = n._howls[t2]._soundById(r[i]);
              s && s._node && (s._node.volume = s._volume * e);
            }
        return n;
      }
      return n._volume;
    }, mute: function(e) {
      var n = this || o;
      n.ctx || g(), n._muted = e, n.usingWebAudio && n.masterGain.gain.setValueAtTime(e ? 0 : n._volume, o.ctx.currentTime);
      for (var t2 = 0; t2 < n._howls.length; t2++)
        if (!n._howls[t2]._webAudio)
          for (var r = n._howls[t2]._getSoundIds(), i = 0; i < r.length; i++) {
            var s = n._howls[t2]._soundById(r[i]);
            s && s._node && (s._node.muted = !!e || s._muted);
          }
      return n;
    }, stop: function() {
      for (var e = this || o, n = 0; n < e._howls.length; n++)
        e._howls[n].stop();
      return e;
    }, unload: function() {
      for (var e = this || o, n = e._howls.length - 1; n >= 0; n--)
        e._howls[n].unload();
      return e.usingWebAudio && e.ctx && e.ctx.close !== void 0 && (e.ctx.close(), e.ctx = null, g()), e;
    }, codecs: function(e) {
      return (this || o)._codecs[e.replace(/^x-/, "")];
    }, _setup: function() {
      var e = this || o;
      if (e.state = e.ctx && e.ctx.state || "suspended", e._autoSuspend(), !e.usingWebAudio)
        if (typeof Audio < "u")
          try {
            var n = new Audio();
            n.oncanplaythrough === void 0 && (e._canPlayEvent = "canplay");
          } catch {
            e.noAudio = true;
          }
        else
          e.noAudio = true;
      try {
        var n = new Audio();
        n.muted && (e.noAudio = true);
      } catch {
      }
      return e.noAudio || e._setupCodecs(), e;
    }, _setupCodecs: function() {
      var e = this || o, n = null;
      try {
        n = typeof Audio < "u" ? new Audio() : null;
      } catch {
        return e;
      }
      if (!n || typeof n.canPlayType != "function")
        return e;
      var t2 = n.canPlayType("audio/mpeg;").replace(/^no$/, ""), r = e._navigator ? e._navigator.userAgent : "", i = r.match(/OPR\/(\d+)/g), s = i && parseInt(i[0].split("/")[1], 10) < 33, u = r.indexOf("Safari") !== -1 && r.indexOf("Chrome") === -1, p = r.match(/Version\/(.*?) /), m = u && p && parseInt(p[1], 10) < 15;
      return e._codecs = { mp3: !(s || !t2 && !n.canPlayType("audio/mp3;").replace(/^no$/, "")), mpeg: !!t2, opus: !!n.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""), ogg: !!n.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""), oga: !!n.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""), wav: !!(n.canPlayType('audio/wav; codecs="1"') || n.canPlayType("audio/wav")).replace(/^no$/, ""), aac: !!n.canPlayType("audio/aac;").replace(/^no$/, ""), caf: !!n.canPlayType("audio/x-caf;").replace(/^no$/, ""), m4a: !!(n.canPlayType("audio/x-m4a;") || n.canPlayType("audio/m4a;") || n.canPlayType("audio/aac;")).replace(/^no$/, ""), m4b: !!(n.canPlayType("audio/x-m4b;") || n.canPlayType("audio/m4b;") || n.canPlayType("audio/aac;")).replace(/^no$/, ""), mp4: !!(n.canPlayType("audio/x-mp4;") || n.canPlayType("audio/mp4;") || n.canPlayType("audio/aac;")).replace(/^no$/, ""), weba: !(m || !n.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, "")), webm: !(m || !n.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, "")), dolby: !!n.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/, ""), flac: !!(n.canPlayType("audio/x-flac;") || n.canPlayType("audio/flac;")).replace(/^no$/, "") }, e;
    }, _unlockAudio: function() {
      var e = this || o;
      if (!e._audioUnlocked && e.ctx) {
        e._audioUnlocked = false, e.autoUnlock = false, e._mobileUnloaded || e.ctx.sampleRate === 44100 || (e._mobileUnloaded = true, e.unload()), e._scratchBuffer = e.ctx.createBuffer(1, 1, 22050);
        var n = function(t2) {
          for (; e._html5AudioPool.length < e.html5PoolSize; )
            try {
              var r = new Audio();
              r._unlocked = true, e._releaseHtml5Audio(r);
            } catch {
              e.noAudio = true;
              break;
            }
          for (var i = 0; i < e._howls.length; i++)
            if (!e._howls[i]._webAudio)
              for (var s = e._howls[i]._getSoundIds(), u = 0; u < s.length; u++) {
                var p = e._howls[i]._soundById(s[u]);
                p && p._node && !p._node._unlocked && (p._node._unlocked = true, p._node.load());
              }
          e._autoResume();
          var m = e.ctx.createBufferSource();
          m.buffer = e._scratchBuffer, m.connect(e.ctx.destination), m.start === void 0 ? m.noteOn(0) : m.start(0), typeof e.ctx.resume == "function" && e.ctx.resume(), m.onended = function() {
            m.disconnect(0), e._audioUnlocked = true, document.removeEventListener("touchstart", n, true), document.removeEventListener("touchend", n, true), document.removeEventListener("click", n, true), document.removeEventListener("keydown", n, true);
            for (var y = 0; y < e._howls.length; y++)
              e._howls[y]._emit("unlock");
          };
        };
        return document.addEventListener("touchstart", n, true), document.addEventListener("touchend", n, true), document.addEventListener("click", n, true), document.addEventListener("keydown", n, true), e;
      }
    }, _obtainHtml5Audio: function() {
      var e = this || o;
      if (e._html5AudioPool.length)
        return e._html5AudioPool.pop();
      var n = new Audio().play();
      return n && typeof Promise < "u" && (n instanceof Promise || typeof n.then == "function") && n.catch(function() {
        console.warn("HTML5 Audio pool exhausted, returning potentially locked audio object.");
      }), new Audio();
    }, _releaseHtml5Audio: function(e) {
      var n = this || o;
      return e._unlocked && n._html5AudioPool.push(e), n;
    }, _autoSuspend: function() {
      var e = this;
      if (e.autoSuspend && e.ctx && e.ctx.suspend !== void 0 && o.usingWebAudio) {
        for (var n = 0; n < e._howls.length; n++)
          if (e._howls[n]._webAudio) {
            for (var t2 = 0; t2 < e._howls[n]._sounds.length; t2++)
              if (!e._howls[n]._sounds[t2]._paused)
                return e;
          }
        return e._suspendTimer && clearTimeout(e._suspendTimer), e._suspendTimer = setTimeout(function() {
          if (e.autoSuspend) {
            e._suspendTimer = null, e.state = "suspending";
            var r = function() {
              e.state = "suspended", e._resumeAfterSuspend && (delete e._resumeAfterSuspend, e._autoResume());
            };
            e.ctx.suspend().then(r, r);
          }
        }, 3e4), e;
      }
    }, _autoResume: function() {
      var e = this;
      if (e.ctx && e.ctx.resume !== void 0 && o.usingWebAudio)
        return e.state === "running" && e.ctx.state !== "interrupted" && e._suspendTimer ? (clearTimeout(e._suspendTimer), e._suspendTimer = null) : e.state === "suspended" || e.state === "running" && e.ctx.state === "interrupted" ? (e.ctx.resume().then(function() {
          e.state = "running";
          for (var n = 0; n < e._howls.length; n++)
            e._howls[n]._emit("resume");
        }), e._suspendTimer && (clearTimeout(e._suspendTimer), e._suspendTimer = null)) : e.state === "suspending" && (e._resumeAfterSuspend = true), e;
    } };
    var o = new f(), a = function(e) {
      var n = this;
      if (!e.src || e.src.length === 0)
        return void console.error("An array of source files must be passed with any new Howl.");
      n.init(e);
    };
    a.prototype = { init: function(e) {
      var n = this;
      return o.ctx || g(), n._autoplay = e.autoplay || false, n._format = typeof e.format != "string" ? e.format : [e.format], n._html5 = e.html5 || false, n._muted = e.mute || false, n._loop = e.loop || false, n._pool = e.pool || 5, n._preload = typeof e.preload != "boolean" && e.preload !== "metadata" || e.preload, n._rate = e.rate || 1, n._sprite = e.sprite || {}, n._src = typeof e.src != "string" ? e.src : [e.src], n._volume = e.volume !== void 0 ? e.volume : 1, n._xhr = { method: e.xhr && e.xhr.method ? e.xhr.method : "GET", headers: e.xhr && e.xhr.headers ? e.xhr.headers : null, withCredentials: !(!e.xhr || !e.xhr.withCredentials) && e.xhr.withCredentials }, n._duration = 0, n._state = "unloaded", n._sounds = [], n._endTimers = {}, n._queue = [], n._playLock = false, n._onend = e.onend ? [{ fn: e.onend }] : [], n._onfade = e.onfade ? [{ fn: e.onfade }] : [], n._onload = e.onload ? [{ fn: e.onload }] : [], n._onloaderror = e.onloaderror ? [{ fn: e.onloaderror }] : [], n._onplayerror = e.onplayerror ? [{ fn: e.onplayerror }] : [], n._onpause = e.onpause ? [{ fn: e.onpause }] : [], n._onplay = e.onplay ? [{ fn: e.onplay }] : [], n._onstop = e.onstop ? [{ fn: e.onstop }] : [], n._onmute = e.onmute ? [{ fn: e.onmute }] : [], n._onvolume = e.onvolume ? [{ fn: e.onvolume }] : [], n._onrate = e.onrate ? [{ fn: e.onrate }] : [], n._onseek = e.onseek ? [{ fn: e.onseek }] : [], n._onunlock = e.onunlock ? [{ fn: e.onunlock }] : [], n._onresume = [], n._webAudio = o.usingWebAudio && !n._html5, o.ctx !== void 0 && o.ctx && o.autoUnlock && o._unlockAudio(), o._howls.push(n), n._autoplay && n._queue.push({ event: "play", action: function() {
        n.play();
      } }), n._preload && n._preload !== "none" && n.load(), n;
    }, load: function() {
      var e = this, n = null;
      if (o.noAudio)
        return void e._emit("loaderror", null, "No audio support.");
      typeof e._src == "string" && (e._src = [e._src]);
      for (var t2 = 0; t2 < e._src.length; t2++) {
        var r, i;
        if (e._format && e._format[t2])
          r = e._format[t2];
        else {
          if (typeof (i = e._src[t2]) != "string") {
            e._emit("loaderror", null, "Non-string found in selected audio sources - ignoring.");
            continue;
          }
          r = /^data:audio\/([^;,]+);/i.exec(i), r || (r = /\.([^.]+)$/.exec(i.split("?", 1)[0])), r && (r = r[1].toLowerCase());
        }
        if (r || console.warn('No file extension was found. Consider using the "format" property or specify an extension.'), r && o.codecs(r)) {
          n = e._src[t2];
          break;
        }
      }
      return n ? (e._src = n, e._state = "loading", window.location.protocol === "https:" && n.slice(0, 5) === "http:" && (e._html5 = true, e._webAudio = false), new d(e), e._webAudio && V(e), e) : void e._emit("loaderror", null, "No codec support for selected audio sources.");
    }, play: function(e, n) {
      var t2 = this, r = null;
      if (typeof e == "number")
        r = e, e = null;
      else {
        if (typeof e == "string" && t2._state === "loaded" && !t2._sprite[e])
          return null;
        if (e === void 0 && (e = "__default", !t2._playLock)) {
          for (var i = 0, s = 0; s < t2._sounds.length; s++)
            t2._sounds[s]._paused && !t2._sounds[s]._ended && (i++, r = t2._sounds[s]._id);
          i === 1 ? e = null : r = null;
        }
      }
      var u = r ? t2._soundById(r) : t2._inactiveSound();
      if (!u)
        return null;
      if (r && !e && (e = u._sprite || "__default"), t2._state !== "loaded") {
        u._sprite = e, u._ended = false;
        var p = u._id;
        return t2._queue.push({ event: "play", action: function() {
          t2.play(p);
        } }), p;
      }
      if (r && !u._paused)
        return n || t2._loadQueue("play"), u._id;
      t2._webAudio && o._autoResume();
      var m = Math.max(0, u._seek > 0 ? u._seek : t2._sprite[e][0] / 1e3), y = Math.max(0, (t2._sprite[e][0] + t2._sprite[e][1]) / 1e3 - m), w = 1e3 * y / Math.abs(u._rate), T = t2._sprite[e][0] / 1e3, S = (t2._sprite[e][0] + t2._sprite[e][1]) / 1e3;
      u._sprite = e, u._ended = false;
      var k = function() {
        u._paused = false, u._seek = m, u._start = T, u._stop = S, u._loop = !(!u._loop && !t2._sprite[e][2]);
      };
      if (m >= S)
        return void t2._ended(u);
      var v = u._node;
      if (t2._webAudio) {
        var I = function() {
          t2._playLock = false, k(), t2._refreshBuffer(u);
          var F = u._muted || t2._muted ? 0 : u._volume;
          v.gain.setValueAtTime(F, o.ctx.currentTime), u._playStart = o.ctx.currentTime, v.bufferSource.start === void 0 ? u._loop ? v.bufferSource.noteGrainOn(0, m, 86400) : v.bufferSource.noteGrainOn(0, m, y) : u._loop ? v.bufferSource.start(0, m, 86400) : v.bufferSource.start(0, m, y), w !== 1 / 0 && (t2._endTimers[u._id] = setTimeout(t2._ended.bind(t2, u), w)), n || setTimeout(function() {
            t2._emit("play", u._id), t2._loadQueue();
          }, 0);
        };
        o.state === "running" && o.ctx.state !== "interrupted" ? I() : (t2._playLock = true, t2.once("resume", I), t2._clearTimer(u._id));
      } else {
        var G = function() {
          v.currentTime = m, v.muted = u._muted || t2._muted || o._muted || v.muted, v.volume = u._volume * o.volume(), v.playbackRate = u._rate;
          try {
            var F = v.play();
            if (F && typeof Promise < "u" && (F instanceof Promise || typeof F.then == "function") ? (t2._playLock = true, k(), F.then(function() {
              t2._playLock = false, v._unlocked = true, n ? t2._loadQueue() : t2._emit("play", u._id);
            }).catch(function() {
              t2._playLock = false, t2._emit("playerror", u._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction."), u._ended = true, u._paused = true;
            })) : n || (t2._playLock = false, k(), t2._emit("play", u._id)), v.playbackRate = u._rate, v.paused)
              return void t2._emit("playerror", u._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.");
            e !== "__default" || u._loop ? t2._endTimers[u._id] = setTimeout(t2._ended.bind(t2, u), w) : (t2._endTimers[u._id] = function() {
              t2._ended(u), v.removeEventListener("ended", t2._endTimers[u._id], false);
            }, v.addEventListener("ended", t2._endTimers[u._id], false));
          } catch (B) {
            t2._emit("playerror", u._id, B);
          }
        };
        v.src === "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA" && (v.src = t2._src, v.load());
        var P = window && window.ejecta || !v.readyState && o._navigator.isCocoonJS;
        if (v.readyState >= 3 || P)
          G();
        else {
          t2._playLock = true, t2._state = "loading";
          var O = function() {
            t2._state = "loaded", G(), v.removeEventListener(o._canPlayEvent, O, false);
          };
          v.addEventListener(o._canPlayEvent, O, false), t2._clearTimer(u._id);
        }
      }
      return u._id;
    }, pause: function(e) {
      var n = this;
      if (n._state !== "loaded" || n._playLock)
        return n._queue.push({ event: "pause", action: function() {
          n.pause(e);
        } }), n;
      for (var t2 = n._getSoundIds(e), r = 0; r < t2.length; r++) {
        n._clearTimer(t2[r]);
        var i = n._soundById(t2[r]);
        if (i && !i._paused && (i._seek = n.seek(t2[r]), i._rateSeek = 0, i._paused = true, n._stopFade(t2[r]), i._node))
          if (n._webAudio) {
            if (!i._node.bufferSource)
              continue;
            i._node.bufferSource.stop === void 0 ? i._node.bufferSource.noteOff(0) : i._node.bufferSource.stop(0), n._cleanBuffer(i._node);
          } else
            isNaN(i._node.duration) && i._node.duration !== 1 / 0 || i._node.pause();
        arguments[1] || n._emit("pause", i ? i._id : null);
      }
      return n;
    }, stop: function(e, n) {
      var t2 = this;
      if (t2._state !== "loaded" || t2._playLock)
        return t2._queue.push({ event: "stop", action: function() {
          t2.stop(e);
        } }), t2;
      for (var r = t2._getSoundIds(e), i = 0; i < r.length; i++) {
        t2._clearTimer(r[i]);
        var s = t2._soundById(r[i]);
        s && (s._seek = s._start || 0, s._rateSeek = 0, s._paused = true, s._ended = true, t2._stopFade(r[i]), s._node && (t2._webAudio ? s._node.bufferSource && (s._node.bufferSource.stop === void 0 ? s._node.bufferSource.noteOff(0) : s._node.bufferSource.stop(0), t2._cleanBuffer(s._node)) : isNaN(s._node.duration) && s._node.duration !== 1 / 0 || (s._node.currentTime = s._start || 0, s._node.pause(), s._node.duration === 1 / 0 && t2._clearSound(s._node))), n || t2._emit("stop", s._id));
      }
      return t2;
    }, mute: function(e, n) {
      var t2 = this;
      if (t2._state !== "loaded" || t2._playLock)
        return t2._queue.push({ event: "mute", action: function() {
          t2.mute(e, n);
        } }), t2;
      if (n === void 0) {
        if (typeof e != "boolean")
          return t2._muted;
        t2._muted = e;
      }
      for (var r = t2._getSoundIds(n), i = 0; i < r.length; i++) {
        var s = t2._soundById(r[i]);
        s && (s._muted = e, s._interval && t2._stopFade(s._id), t2._webAudio && s._node ? s._node.gain.setValueAtTime(e ? 0 : s._volume, o.ctx.currentTime) : s._node && (s._node.muted = !!o._muted || e), t2._emit("mute", s._id));
      }
      return t2;
    }, volume: function() {
      var e, n, t2 = this, r = arguments;
      if (r.length === 0)
        return t2._volume;
      r.length === 1 || r.length === 2 && r[1] === void 0 ? t2._getSoundIds().indexOf(r[0]) >= 0 ? n = parseInt(r[0], 10) : e = parseFloat(r[0]) : r.length >= 2 && (e = parseFloat(r[0]), n = parseInt(r[1], 10));
      var i;
      if (!(e !== void 0 && e >= 0 && e <= 1))
        return i = n ? t2._soundById(n) : t2._sounds[0], i ? i._volume : 0;
      if (t2._state !== "loaded" || t2._playLock)
        return t2._queue.push({ event: "volume", action: function() {
          t2.volume.apply(t2, r);
        } }), t2;
      n === void 0 && (t2._volume = e), n = t2._getSoundIds(n);
      for (var s = 0; s < n.length; s++)
        (i = t2._soundById(n[s])) && (i._volume = e, r[2] || t2._stopFade(n[s]), t2._webAudio && i._node && !i._muted ? i._node.gain.setValueAtTime(e, o.ctx.currentTime) : i._node && !i._muted && (i._node.volume = e * o.volume()), t2._emit("volume", i._id));
      return t2;
    }, fade: function(e, n, t2, r) {
      var i = this;
      if (i._state !== "loaded" || i._playLock)
        return i._queue.push({ event: "fade", action: function() {
          i.fade(e, n, t2, r);
        } }), i;
      e = Math.min(Math.max(0, parseFloat(e)), 1), n = Math.min(Math.max(0, parseFloat(n)), 1), t2 = parseFloat(t2), i.volume(e, r);
      for (var s = i._getSoundIds(r), u = 0; u < s.length; u++) {
        var p = i._soundById(s[u]);
        if (p) {
          if (r || i._stopFade(s[u]), i._webAudio && !p._muted) {
            var m = o.ctx.currentTime, y = m + t2 / 1e3;
            p._volume = e, p._node.gain.setValueAtTime(e, m), p._node.gain.linearRampToValueAtTime(n, y);
          }
          i._startFadeInterval(p, e, n, t2, s[u], r === void 0);
        }
      }
      return i;
    }, _startFadeInterval: function(e, n, t2, r, i, s) {
      var u = this, p = n, m = t2 - n, y = Math.abs(m / 0.01), w = Math.max(4, y > 0 ? r / y : r), T = Date.now();
      e._fadeTo = t2, e._interval = setInterval(function() {
        var S = (Date.now() - T) / r;
        T = Date.now(), p += m * S, p = Math.round(100 * p) / 100, p = m < 0 ? Math.max(t2, p) : Math.min(t2, p), u._webAudio ? e._volume = p : u.volume(p, e._id, true), s && (u._volume = p), (t2 < n && p <= t2 || t2 > n && p >= t2) && (clearInterval(e._interval), e._interval = null, e._fadeTo = null, u.volume(t2, e._id), u._emit("fade", e._id));
      }, w);
    }, _stopFade: function(e) {
      var n = this, t2 = n._soundById(e);
      return t2 && t2._interval && (n._webAudio && t2._node.gain.cancelScheduledValues(o.ctx.currentTime), clearInterval(t2._interval), t2._interval = null, n.volume(t2._fadeTo, e), t2._fadeTo = null, n._emit("fade", e)), n;
    }, loop: function() {
      var e, n, t2, r = this, i = arguments;
      if (i.length === 0)
        return r._loop;
      if (i.length === 1) {
        if (typeof i[0] != "boolean")
          return !!(t2 = r._soundById(parseInt(i[0], 10))) && t2._loop;
        e = i[0], r._loop = e;
      } else
        i.length === 2 && (e = i[0], n = parseInt(i[1], 10));
      for (var s = r._getSoundIds(n), u = 0; u < s.length; u++)
        (t2 = r._soundById(s[u])) && (t2._loop = e, r._webAudio && t2._node && t2._node.bufferSource && (t2._node.bufferSource.loop = e, e && (t2._node.bufferSource.loopStart = t2._start || 0, t2._node.bufferSource.loopEnd = t2._stop, r.playing(s[u]) && (r.pause(s[u], true), r.play(s[u], true)))));
      return r;
    }, rate: function() {
      var e, n, t2 = this, r = arguments;
      if (r.length === 0)
        n = t2._sounds[0]._id;
      else if (r.length === 1) {
        var i = t2._getSoundIds(), s = i.indexOf(r[0]);
        s >= 0 ? n = parseInt(r[0], 10) : e = parseFloat(r[0]);
      } else
        r.length === 2 && (e = parseFloat(r[0]), n = parseInt(r[1], 10));
      var u;
      if (typeof e != "number")
        return u = t2._soundById(n), u ? u._rate : t2._rate;
      if (t2._state !== "loaded" || t2._playLock)
        return t2._queue.push({ event: "rate", action: function() {
          t2.rate.apply(t2, r);
        } }), t2;
      n === void 0 && (t2._rate = e), n = t2._getSoundIds(n);
      for (var p = 0; p < n.length; p++)
        if (u = t2._soundById(n[p])) {
          t2.playing(n[p]) && (u._rateSeek = t2.seek(n[p]), u._playStart = t2._webAudio ? o.ctx.currentTime : u._playStart), u._rate = e, t2._webAudio && u._node && u._node.bufferSource ? u._node.bufferSource.playbackRate.setValueAtTime(e, o.ctx.currentTime) : u._node && (u._node.playbackRate = e);
          var m = t2.seek(n[p]), y = (t2._sprite[u._sprite][0] + t2._sprite[u._sprite][1]) / 1e3 - m, w = 1e3 * y / Math.abs(u._rate);
          !t2._endTimers[n[p]] && u._paused || (t2._clearTimer(n[p]), t2._endTimers[n[p]] = setTimeout(t2._ended.bind(t2, u), w)), t2._emit("rate", u._id);
        }
      return t2;
    }, seek: function() {
      var e, n, t2 = this, r = arguments;
      if (r.length === 0)
        t2._sounds.length && (n = t2._sounds[0]._id);
      else if (r.length === 1) {
        var i = t2._getSoundIds(), s = i.indexOf(r[0]);
        s >= 0 ? n = parseInt(r[0], 10) : t2._sounds.length && (n = t2._sounds[0]._id, e = parseFloat(r[0]));
      } else
        r.length === 2 && (e = parseFloat(r[0]), n = parseInt(r[1], 10));
      if (n === void 0)
        return 0;
      if (typeof e == "number" && (t2._state !== "loaded" || t2._playLock))
        return t2._queue.push({ event: "seek", action: function() {
          t2.seek.apply(t2, r);
        } }), t2;
      var u = t2._soundById(n);
      if (u) {
        if (!(typeof e == "number" && e >= 0)) {
          if (t2._webAudio) {
            var p = t2.playing(n) ? o.ctx.currentTime - u._playStart : 0, m = u._rateSeek ? u._rateSeek - u._seek : 0;
            return u._seek + (m + p * Math.abs(u._rate));
          }
          return u._node.currentTime;
        }
        var y = t2.playing(n);
        y && t2.pause(n, true), u._seek = e, u._ended = false, t2._clearTimer(n), t2._webAudio || !u._node || isNaN(u._node.duration) || (u._node.currentTime = e);
        var w = function() {
          y && t2.play(n, true), t2._emit("seek", n);
        };
        if (y && !t2._webAudio) {
          var T = function() {
            t2._playLock ? setTimeout(T, 0) : w();
          };
          setTimeout(T, 0);
        } else
          w();
      }
      return t2;
    }, playing: function(e) {
      var n = this;
      if (typeof e == "number") {
        var t2 = n._soundById(e);
        return !!t2 && !t2._paused;
      }
      for (var r = 0; r < n._sounds.length; r++)
        if (!n._sounds[r]._paused)
          return true;
      return false;
    }, duration: function(e) {
      var n = this, t2 = n._duration, r = n._soundById(e);
      return r && (t2 = n._sprite[r._sprite][1] / 1e3), t2;
    }, state: function() {
      return this._state;
    }, unload: function() {
      for (var e = this, n = e._sounds, t2 = 0; t2 < n.length; t2++)
        n[t2]._paused || e.stop(n[t2]._id), e._webAudio || (e._clearSound(n[t2]._node), n[t2]._node.removeEventListener("error", n[t2]._errorFn, false), n[t2]._node.removeEventListener(o._canPlayEvent, n[t2]._loadFn, false), n[t2]._node.removeEventListener("ended", n[t2]._endFn, false), o._releaseHtml5Audio(n[t2]._node)), delete n[t2]._node, e._clearTimer(n[t2]._id);
      var r = o._howls.indexOf(e);
      r >= 0 && o._howls.splice(r, 1);
      var i = true;
      for (t2 = 0; t2 < o._howls.length; t2++)
        if (o._howls[t2]._src === e._src || e._src.indexOf(o._howls[t2]._src) >= 0) {
          i = false;
          break;
        }
      return l && i && delete l[e._src], o.noAudio = false, e._state = "unloaded", e._sounds = [], e = null, null;
    }, on: function(e, n, t2, r) {
      var i = this, s = i["_on" + e];
      return typeof n == "function" && s.push(r ? { id: t2, fn: n, once: r } : { id: t2, fn: n }), i;
    }, off: function(e, n, t2) {
      var r = this, i = r["_on" + e], s = 0;
      if (typeof n == "number" && (t2 = n, n = null), n || t2)
        for (s = 0; s < i.length; s++) {
          var u = t2 === i[s].id;
          if (n === i[s].fn && u || !n && u) {
            i.splice(s, 1);
            break;
          }
        }
      else if (e)
        r["_on" + e] = [];
      else {
        var p = Object.keys(r);
        for (s = 0; s < p.length; s++)
          p[s].indexOf("_on") === 0 && Array.isArray(r[p[s]]) && (r[p[s]] = []);
      }
      return r;
    }, once: function(e, n, t2) {
      var r = this;
      return r.on(e, n, t2, 1), r;
    }, _emit: function(e, n, t2) {
      for (var r = this, i = r["_on" + e], s = i.length - 1; s >= 0; s--)
        i[s].id && i[s].id !== n && e !== "load" || (setTimeout((function(u) {
          u.call(this, n, t2);
        }).bind(r, i[s].fn), 0), i[s].once && r.off(e, i[s].fn, i[s].id));
      return r._loadQueue(e), r;
    }, _loadQueue: function(e) {
      var n = this;
      if (n._queue.length > 0) {
        var t2 = n._queue[0];
        t2.event === e && (n._queue.shift(), n._loadQueue()), e || t2.action();
      }
      return n;
    }, _ended: function(e) {
      var n = this, t2 = e._sprite;
      if (!n._webAudio && e._node && !e._node.paused && !e._node.ended && e._node.currentTime < e._stop)
        return setTimeout(n._ended.bind(n, e), 100), n;
      var r = !(!e._loop && !n._sprite[t2][2]);
      if (n._emit("end", e._id), !n._webAudio && r && n.stop(e._id, true).play(e._id), n._webAudio && r) {
        n._emit("play", e._id), e._seek = e._start || 0, e._rateSeek = 0, e._playStart = o.ctx.currentTime;
        var i = 1e3 * (e._stop - e._start) / Math.abs(e._rate);
        n._endTimers[e._id] = setTimeout(n._ended.bind(n, e), i);
      }
      return n._webAudio && !r && (e._paused = true, e._ended = true, e._seek = e._start || 0, e._rateSeek = 0, n._clearTimer(e._id), n._cleanBuffer(e._node), o._autoSuspend()), n._webAudio || r || n.stop(e._id, true), n;
    }, _clearTimer: function(e) {
      var n = this;
      if (n._endTimers[e]) {
        if (typeof n._endTimers[e] != "function")
          clearTimeout(n._endTimers[e]);
        else {
          var t2 = n._soundById(e);
          t2 && t2._node && t2._node.removeEventListener("ended", n._endTimers[e], false);
        }
        delete n._endTimers[e];
      }
      return n;
    }, _soundById: function(e) {
      for (var n = this, t2 = 0; t2 < n._sounds.length; t2++)
        if (e === n._sounds[t2]._id)
          return n._sounds[t2];
      return null;
    }, _inactiveSound: function() {
      var e = this;
      e._drain();
      for (var n = 0; n < e._sounds.length; n++)
        if (e._sounds[n]._ended)
          return e._sounds[n].reset();
      return new d(e);
    }, _drain: function() {
      var e = this, n = e._pool, t2 = 0, r = 0;
      if (!(e._sounds.length < n)) {
        for (r = 0; r < e._sounds.length; r++)
          e._sounds[r]._ended && t2++;
        for (r = e._sounds.length - 1; r >= 0; r--) {
          if (t2 <= n)
            return;
          e._sounds[r]._ended && (e._webAudio && e._sounds[r]._node && e._sounds[r]._node.disconnect(0), e._sounds.splice(r, 1), t2--);
        }
      }
    }, _getSoundIds: function(e) {
      var n = this;
      if (e === void 0) {
        for (var t2 = [], r = 0; r < n._sounds.length; r++)
          t2.push(n._sounds[r]._id);
        return t2;
      }
      return [e];
    }, _refreshBuffer: function(e) {
      var n = this;
      return e._node.bufferSource = o.ctx.createBufferSource(), e._node.bufferSource.buffer = l[n._src], e._panner ? e._node.bufferSource.connect(e._panner) : e._node.bufferSource.connect(e._node), e._node.bufferSource.loop = e._loop, e._loop && (e._node.bufferSource.loopStart = e._start || 0, e._node.bufferSource.loopEnd = e._stop || 0), e._node.bufferSource.playbackRate.setValueAtTime(e._rate, o.ctx.currentTime), n;
    }, _cleanBuffer: function(e) {
      var n = this, t2 = o._navigator && o._navigator.vendor.indexOf("Apple") >= 0;
      if (!e.bufferSource)
        return n;
      if (o._scratchBuffer && e.bufferSource && (e.bufferSource.onended = null, e.bufferSource.disconnect(0), t2))
        try {
          e.bufferSource.buffer = o._scratchBuffer;
        } catch {
        }
      return e.bufferSource = null, n;
    }, _clearSound: function(e) {
      /MSIE |Trident\//.test(o._navigator && o._navigator.userAgent) || (e.src = "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA");
    } };
    var d = function(e) {
      this._parent = e, this.init();
    };
    d.prototype = { init: function() {
      var e = this, n = e._parent;
      return e._muted = n._muted, e._loop = n._loop, e._volume = n._volume, e._rate = n._rate, e._seek = 0, e._paused = true, e._ended = true, e._sprite = "__default", e._id = ++o._counter, n._sounds.push(e), e.create(), e;
    }, create: function() {
      var e = this, n = e._parent, t2 = o._muted || e._muted || e._parent._muted ? 0 : e._volume;
      return n._webAudio ? (e._node = o.ctx.createGain === void 0 ? o.ctx.createGainNode() : o.ctx.createGain(), e._node.gain.setValueAtTime(t2, o.ctx.currentTime), e._node.paused = true, e._node.connect(o.masterGain)) : o.noAudio || (e._node = o._obtainHtml5Audio(), e._errorFn = e._errorListener.bind(e), e._node.addEventListener("error", e._errorFn, false), e._loadFn = e._loadListener.bind(e), e._node.addEventListener(o._canPlayEvent, e._loadFn, false), e._endFn = e._endListener.bind(e), e._node.addEventListener("ended", e._endFn, false), e._node.src = n._src, e._node.preload = n._preload === true ? "auto" : n._preload, e._node.volume = t2 * o.volume(), e._node.load()), e;
    }, reset: function() {
      var e = this, n = e._parent;
      return e._muted = n._muted, e._loop = n._loop, e._volume = n._volume, e._rate = n._rate, e._seek = 0, e._rateSeek = 0, e._paused = true, e._ended = true, e._sprite = "__default", e._id = ++o._counter, e;
    }, _errorListener: function() {
      var e = this;
      e._parent._emit("loaderror", e._id, e._node.error ? e._node.error.code : 0), e._node.removeEventListener("error", e._errorFn, false);
    }, _loadListener: function() {
      var e = this, n = e._parent;
      n._duration = Math.ceil(10 * e._node.duration) / 10, Object.keys(n._sprite).length === 0 && (n._sprite = { __default: [0, 1e3 * n._duration] }), n._state !== "loaded" && (n._state = "loaded", n._emit("load"), n._loadQueue()), e._node.removeEventListener(o._canPlayEvent, e._loadFn, false);
    }, _endListener: function() {
      var e = this, n = e._parent;
      n._duration === 1 / 0 && (n._duration = Math.ceil(10 * e._node.duration) / 10, n._sprite.__default[1] === 1 / 0 && (n._sprite.__default[1] = 1e3 * n._duration), n._ended(e)), e._node.removeEventListener("ended", e._endFn, false);
    } };
    var l = {}, V = function(e) {
      var n = e._src;
      if (l[n])
        return e._duration = l[n].duration, void c(e);
      if (/^data:[^;]+;base64,/.test(n)) {
        for (var t2 = atob(n.split(",")[1]), r = new Uint8Array(t2.length), i = 0; i < t2.length; ++i)
          r[i] = t2.charCodeAt(i);
        _(r.buffer, e);
      } else {
        var s = new XMLHttpRequest();
        s.open(e._xhr.method, n, true), s.withCredentials = e._xhr.withCredentials, s.responseType = "arraybuffer", e._xhr.headers && Object.keys(e._xhr.headers).forEach(function(u) {
          s.setRequestHeader(u, e._xhr.headers[u]);
        }), s.onload = function() {
          var u = (s.status + "")[0];
          if (u !== "0" && u !== "2" && u !== "3")
            return void e._emit("loaderror", null, "Failed loading audio file with status: " + s.status + ".");
          _(s.response, e);
        }, s.onerror = function() {
          e._webAudio && (e._html5 = true, e._webAudio = false, e._sounds = [], delete l[n], e.load());
        }, h(s);
      }
    }, h = function(e) {
      try {
        e.send();
      } catch {
        e.onerror();
      }
    }, _ = function(e, n) {
      var t2 = function() {
        n._emit("loaderror", null, "Decoding audio data failed.");
      }, r = function(i) {
        i && n._sounds.length > 0 ? (l[n._src] = i, c(n, i)) : t2();
      };
      typeof Promise < "u" && o.ctx.decodeAudioData.length === 1 ? o.ctx.decodeAudioData(e).then(r).catch(t2) : o.ctx.decodeAudioData(e, r, t2);
    }, c = function(e, n) {
      n && !e._duration && (e._duration = n.duration), Object.keys(e._sprite).length === 0 && (e._sprite = { __default: [0, 1e3 * e._duration] }), e._state !== "loaded" && (e._state = "loaded", e._emit("load"), e._loadQueue());
    }, g = function() {
      if (o.usingWebAudio) {
        try {
          typeof AudioContext < "u" ? o.ctx = new AudioContext() : typeof webkitAudioContext < "u" ? o.ctx = new webkitAudioContext() : o.usingWebAudio = false;
        } catch {
          o.usingWebAudio = false;
        }
        o.ctx || (o.usingWebAudio = false);
        var e = /iP(hone|od|ad)/.test(o._navigator && o._navigator.platform), n = o._navigator && o._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/), t2 = n ? parseInt(n[1], 10) : null;
        if (e && t2 && t2 < 9) {
          var r = /safari/.test(o._navigator && o._navigator.userAgent.toLowerCase());
          o._navigator && !r && (o.usingWebAudio = false);
        }
        o.usingWebAudio && (o.masterGain = o.ctx.createGain === void 0 ? o.ctx.createGainNode() : o.ctx.createGain(), o.masterGain.gain.setValueAtTime(o._muted ? 0 : o._volume, o.ctx.currentTime), o.masterGain.connect(o.ctx.destination)), o._setup();
      }
    };
    A.Howler = o, A.Howl = a, typeof H < "u" ? (H.HowlerGlobal = f, H.Howler = o, H.Howl = a, H.Sound = d) : typeof window < "u" && (window.HowlerGlobal = f, window.Howler = o, window.Howl = a, window.Sound = d);
  })();
  (function() {
    HowlerGlobal.prototype._pos = [0, 0, 0], HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0], HowlerGlobal.prototype.stereo = function(o) {
      var a = this;
      if (!a.ctx || !a.ctx.listener)
        return a;
      for (var d = a._howls.length - 1; d >= 0; d--)
        a._howls[d].stereo(o);
      return a;
    }, HowlerGlobal.prototype.pos = function(o, a, d) {
      var l = this;
      return l.ctx && l.ctx.listener ? (a = typeof a != "number" ? l._pos[1] : a, d = typeof d != "number" ? l._pos[2] : d, typeof o != "number" ? l._pos : (l._pos = [o, a, d], l.ctx.listener.positionX !== void 0 ? (l.ctx.listener.positionX.setTargetAtTime(l._pos[0], Howler.ctx.currentTime, 0.1), l.ctx.listener.positionY.setTargetAtTime(l._pos[1], Howler.ctx.currentTime, 0.1), l.ctx.listener.positionZ.setTargetAtTime(l._pos[2], Howler.ctx.currentTime, 0.1)) : l.ctx.listener.setPosition(l._pos[0], l._pos[1], l._pos[2]), l)) : l;
    }, HowlerGlobal.prototype.orientation = function(o, a, d, l, V, h) {
      var _ = this;
      if (!_.ctx || !_.ctx.listener)
        return _;
      var c = _._orientation;
      return a = typeof a != "number" ? c[1] : a, d = typeof d != "number" ? c[2] : d, l = typeof l != "number" ? c[3] : l, V = typeof V != "number" ? c[4] : V, h = typeof h != "number" ? c[5] : h, typeof o != "number" ? c : (_._orientation = [o, a, d, l, V, h], _.ctx.listener.forwardX !== void 0 ? (_.ctx.listener.forwardX.setTargetAtTime(o, Howler.ctx.currentTime, 0.1), _.ctx.listener.forwardY.setTargetAtTime(a, Howler.ctx.currentTime, 0.1), _.ctx.listener.forwardZ.setTargetAtTime(d, Howler.ctx.currentTime, 0.1), _.ctx.listener.upX.setTargetAtTime(l, Howler.ctx.currentTime, 0.1), _.ctx.listener.upY.setTargetAtTime(V, Howler.ctx.currentTime, 0.1), _.ctx.listener.upZ.setTargetAtTime(h, Howler.ctx.currentTime, 0.1)) : _.ctx.listener.setOrientation(o, a, d, l, V, h), _);
    }, Howl.prototype.init = /* @__PURE__ */ function(o) {
      return function(a) {
        var d = this;
        return d._orientation = a.orientation || [1, 0, 0], d._stereo = a.stereo || null, d._pos = a.pos || null, d._pannerAttr = { coneInnerAngle: a.coneInnerAngle !== void 0 ? a.coneInnerAngle : 360, coneOuterAngle: a.coneOuterAngle !== void 0 ? a.coneOuterAngle : 360, coneOuterGain: a.coneOuterGain !== void 0 ? a.coneOuterGain : 0, distanceModel: a.distanceModel !== void 0 ? a.distanceModel : "inverse", maxDistance: a.maxDistance !== void 0 ? a.maxDistance : 1e4, panningModel: a.panningModel !== void 0 ? a.panningModel : "HRTF", refDistance: a.refDistance !== void 0 ? a.refDistance : 1, rolloffFactor: a.rolloffFactor !== void 0 ? a.rolloffFactor : 1 }, d._onstereo = a.onstereo ? [{ fn: a.onstereo }] : [], d._onpos = a.onpos ? [{ fn: a.onpos }] : [], d._onorientation = a.onorientation ? [{ fn: a.onorientation }] : [], o.call(this, a);
      };
    }(Howl.prototype.init), Howl.prototype.stereo = function(o, a) {
      var d = this;
      if (!d._webAudio)
        return d;
      if (d._state !== "loaded")
        return d._queue.push({ event: "stereo", action: function() {
          d.stereo(o, a);
        } }), d;
      var l = Howler.ctx.createStereoPanner === void 0 ? "spatial" : "stereo";
      if (a === void 0) {
        if (typeof o != "number")
          return d._stereo;
        d._stereo = o, d._pos = [o, 0, 0];
      }
      for (var V = d._getSoundIds(a), h = 0; h < V.length; h++) {
        var _ = d._soundById(V[h]);
        if (_) {
          if (typeof o != "number")
            return _._stereo;
          _._stereo = o, _._pos = [o, 0, 0], _._node && (_._pannerAttr.panningModel = "equalpower", _._panner && _._panner.pan || f(_, l), l === "spatial" ? _._panner.positionX !== void 0 ? (_._panner.positionX.setValueAtTime(o, Howler.ctx.currentTime), _._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime), _._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime)) : _._panner.setPosition(o, 0, 0) : _._panner.pan.setValueAtTime(o, Howler.ctx.currentTime)), d._emit("stereo", _._id);
        }
      }
      return d;
    }, Howl.prototype.pos = function(o, a, d, l) {
      var V = this;
      if (!V._webAudio)
        return V;
      if (V._state !== "loaded")
        return V._queue.push({ event: "pos", action: function() {
          V.pos(o, a, d, l);
        } }), V;
      if (a = typeof a != "number" ? 0 : a, d = typeof d != "number" ? -0.5 : d, l === void 0) {
        if (typeof o != "number")
          return V._pos;
        V._pos = [o, a, d];
      }
      for (var h = V._getSoundIds(l), _ = 0; _ < h.length; _++) {
        var c = V._soundById(h[_]);
        if (c) {
          if (typeof o != "number")
            return c._pos;
          c._pos = [o, a, d], c._node && (c._panner && !c._panner.pan || f(c, "spatial"), c._panner.positionX !== void 0 ? (c._panner.positionX.setValueAtTime(o, Howler.ctx.currentTime), c._panner.positionY.setValueAtTime(a, Howler.ctx.currentTime), c._panner.positionZ.setValueAtTime(d, Howler.ctx.currentTime)) : c._panner.setPosition(o, a, d)), V._emit("pos", c._id);
        }
      }
      return V;
    }, Howl.prototype.orientation = function(o, a, d, l) {
      var V = this;
      if (!V._webAudio)
        return V;
      if (V._state !== "loaded")
        return V._queue.push({ event: "orientation", action: function() {
          V.orientation(o, a, d, l);
        } }), V;
      if (a = typeof a != "number" ? V._orientation[1] : a, d = typeof d != "number" ? V._orientation[2] : d, l === void 0) {
        if (typeof o != "number")
          return V._orientation;
        V._orientation = [o, a, d];
      }
      for (var h = V._getSoundIds(l), _ = 0; _ < h.length; _++) {
        var c = V._soundById(h[_]);
        if (c) {
          if (typeof o != "number")
            return c._orientation;
          c._orientation = [o, a, d], c._node && (c._panner || (c._pos || (c._pos = V._pos || [0, 0, -0.5]), f(c, "spatial")), c._panner.orientationX !== void 0 ? (c._panner.orientationX.setValueAtTime(o, Howler.ctx.currentTime), c._panner.orientationY.setValueAtTime(a, Howler.ctx.currentTime), c._panner.orientationZ.setValueAtTime(d, Howler.ctx.currentTime)) : c._panner.setOrientation(o, a, d)), V._emit("orientation", c._id);
        }
      }
      return V;
    }, Howl.prototype.pannerAttr = function() {
      var o, a, d, l = this, V = arguments;
      if (!l._webAudio)
        return l;
      if (V.length === 0)
        return l._pannerAttr;
      if (V.length === 1) {
        if (typeof V[0] != "object")
          return d = l._soundById(parseInt(V[0], 10)), d ? d._pannerAttr : l._pannerAttr;
        o = V[0], a === void 0 && (o.pannerAttr || (o.pannerAttr = { coneInnerAngle: o.coneInnerAngle, coneOuterAngle: o.coneOuterAngle, coneOuterGain: o.coneOuterGain, distanceModel: o.distanceModel, maxDistance: o.maxDistance, refDistance: o.refDistance, rolloffFactor: o.rolloffFactor, panningModel: o.panningModel }), l._pannerAttr = { coneInnerAngle: o.pannerAttr.coneInnerAngle !== void 0 ? o.pannerAttr.coneInnerAngle : l._coneInnerAngle, coneOuterAngle: o.pannerAttr.coneOuterAngle !== void 0 ? o.pannerAttr.coneOuterAngle : l._coneOuterAngle, coneOuterGain: o.pannerAttr.coneOuterGain !== void 0 ? o.pannerAttr.coneOuterGain : l._coneOuterGain, distanceModel: o.pannerAttr.distanceModel !== void 0 ? o.pannerAttr.distanceModel : l._distanceModel, maxDistance: o.pannerAttr.maxDistance !== void 0 ? o.pannerAttr.maxDistance : l._maxDistance, refDistance: o.pannerAttr.refDistance !== void 0 ? o.pannerAttr.refDistance : l._refDistance, rolloffFactor: o.pannerAttr.rolloffFactor !== void 0 ? o.pannerAttr.rolloffFactor : l._rolloffFactor, panningModel: o.pannerAttr.panningModel !== void 0 ? o.pannerAttr.panningModel : l._panningModel });
      } else
        V.length === 2 && (o = V[0], a = parseInt(V[1], 10));
      for (var h = l._getSoundIds(a), _ = 0; _ < h.length; _++)
        if (d = l._soundById(h[_])) {
          var c = d._pannerAttr;
          c = { coneInnerAngle: o.coneInnerAngle !== void 0 ? o.coneInnerAngle : c.coneInnerAngle, coneOuterAngle: o.coneOuterAngle !== void 0 ? o.coneOuterAngle : c.coneOuterAngle, coneOuterGain: o.coneOuterGain !== void 0 ? o.coneOuterGain : c.coneOuterGain, distanceModel: o.distanceModel !== void 0 ? o.distanceModel : c.distanceModel, maxDistance: o.maxDistance !== void 0 ? o.maxDistance : c.maxDistance, refDistance: o.refDistance !== void 0 ? o.refDistance : c.refDistance, rolloffFactor: o.rolloffFactor !== void 0 ? o.rolloffFactor : c.rolloffFactor, panningModel: o.panningModel !== void 0 ? o.panningModel : c.panningModel };
          var g = d._panner;
          g || (d._pos || (d._pos = l._pos || [0, 0, -0.5]), f(d, "spatial"), g = d._panner), g.coneInnerAngle = c.coneInnerAngle, g.coneOuterAngle = c.coneOuterAngle, g.coneOuterGain = c.coneOuterGain, g.distanceModel = c.distanceModel, g.maxDistance = c.maxDistance, g.refDistance = c.refDistance, g.rolloffFactor = c.rolloffFactor, g.panningModel = c.panningModel;
        }
      return l;
    }, Sound.prototype.init = /* @__PURE__ */ function(o) {
      return function() {
        var a = this, d = a._parent;
        a._orientation = d._orientation, a._stereo = d._stereo, a._pos = d._pos, a._pannerAttr = d._pannerAttr, o.call(this), a._stereo ? d.stereo(a._stereo) : a._pos && d.pos(a._pos[0], a._pos[1], a._pos[2], a._id);
      };
    }(Sound.prototype.init), Sound.prototype.reset = /* @__PURE__ */ function(o) {
      return function() {
        var a = this, d = a._parent;
        return a._orientation = d._orientation, a._stereo = d._stereo, a._pos = d._pos, a._pannerAttr = d._pannerAttr, a._stereo ? d.stereo(a._stereo) : a._pos ? d.pos(a._pos[0], a._pos[1], a._pos[2], a._id) : a._panner && (a._panner.disconnect(0), a._panner = void 0, d._refreshBuffer(a)), o.call(this);
      };
    }(Sound.prototype.reset);
    var f = function(o, a) {
      a = a || "spatial", a === "spatial" ? (o._panner = Howler.ctx.createPanner(), o._panner.coneInnerAngle = o._pannerAttr.coneInnerAngle, o._panner.coneOuterAngle = o._pannerAttr.coneOuterAngle, o._panner.coneOuterGain = o._pannerAttr.coneOuterGain, o._panner.distanceModel = o._pannerAttr.distanceModel, o._panner.maxDistance = o._pannerAttr.maxDistance, o._panner.refDistance = o._pannerAttr.refDistance, o._panner.rolloffFactor = o._pannerAttr.rolloffFactor, o._panner.panningModel = o._pannerAttr.panningModel, o._panner.positionX !== void 0 ? (o._panner.positionX.setValueAtTime(o._pos[0], Howler.ctx.currentTime), o._panner.positionY.setValueAtTime(o._pos[1], Howler.ctx.currentTime), o._panner.positionZ.setValueAtTime(o._pos[2], Howler.ctx.currentTime)) : o._panner.setPosition(o._pos[0], o._pos[1], o._pos[2]), o._panner.orientationX !== void 0 ? (o._panner.orientationX.setValueAtTime(o._orientation[0], Howler.ctx.currentTime), o._panner.orientationY.setValueAtTime(o._orientation[1], Howler.ctx.currentTime), o._panner.orientationZ.setValueAtTime(o._orientation[2], Howler.ctx.currentTime)) : o._panner.setOrientation(o._orientation[0], o._orientation[1], o._orientation[2])) : (o._panner = Howler.ctx.createStereoPanner(), o._panner.pan.setValueAtTime(o._stereo, Howler.ctx.currentTime)), o._panner.connect(o._node), o._paused || o._parent.pause(o._id, true).play(o._id, true);
    };
  })();
})(Q);
var ne = "_wrapper_1rzx0_1";
function te(A) {
  const { children: f, background: o, borderWidth: a, characterWidth: d, ...l } = A;
  return import_react.default.createElement("div", { ...l, className: ne, style: {
    "--background": o,
    "--border-width": a,
    "--character-width": d
  } }, f);
}
function oe({ background: A, borderWidth: f, characterWidth: o, prevValue: a, step: d, textColor: l, value: V, withSound: h }) {
  const [_, c] = (0, import_react.useState)(null), [g, e] = (0, import_react.useState)();
  return (0, import_react.useEffect)(() => {
    if (h !== g) {
      const n = h ? new Q.Howl({
        src: [h === true ? ee : h],
        onloaderror: (t2, r) => {
          console.warn("ReactSplitFlapDisplay failed to load sound", r);
        },
        onplayerror: (t2, r) => {
          console.warn("ReactSplitFlapDisplay failed to play sound", r);
        }
      }) : null;
      c(n), e(h);
    }
  }, [h, _, g, c, e]), (0, import_react.useEffect)(() => {
    if (a !== V && (_ == null ? void 0 : _.state()) === "loaded")
      if (Math.round(_.duration() * 1e3) <= d) {
        const n = Math.round((d - _.duration() * 1e3) * 0.8);
        setTimeout(() => {
          _ == null || _.play();
        }, n);
      } else
        console.warn(`ReactSplitFlapDisplay did not play sound; sound duration of ${_.duration() * 1e3}ms is longer than step duration ${d}ms`);
  }, [a, V, _, d]), (0, import_react.useEffect)(() => () => {
    _ == null || _.unload();
  }, [_]), import_react.default.createElement(
    te,
    { key: `${a}-${V}`, background: A, borderWidth: f, characterWidth: o },
    import_react.default.createElement(W, { position: "top", background: A, textColor: l, value: V }),
    import_react.default.createElement(W, { position: "bottom", background: A, textColor: l, value: a }),
    a !== V && import_react.default.createElement(q, { direction: "out", duration: `${d}ms`, position: "top", background: A, textColor: l, value: a }),
    a !== V && import_react.default.createElement(q, { direction: "in", duration: `${d}ms`, position: "bottom", background: A, textColor: l, value: V })
  );
}
var re = "_wrapper_tccvm_1";
var x = {
  background: "#000000",
  borderColor: "#dddddd",
  borderWidth: "1px",
  characterSet: t,
  characterWidth: "1rem",
  fontSize: "1rem",
  minLength: 5,
  padDirection: "left",
  step: 200,
  textColor: "#dddddd",
  value: "94609"
};
var ae = (A, f) => A.split("").map((o) => f.includes(o) ? o : f[0]).join("");
var E = (A, f, o) => o && A.length < o ? Array(o - A.length).fill(f[0]) : [];
function le({ className: A, background: f = x.background, borderColor: o = x.borderColor, borderWidth: a = x.borderWidth, characterSet: d = x.characterSet, characterWidth: l = x.characterWidth, fontSize: V = x.fontSize, minLength: h = x.minLength, padDirection: _ = x.padDirection, step: c = x.step, textColor: g = x.textColor, value: e = x.value, withSound: n, ...t2 }) {
  const r = Array(e.length).fill(d[0]).join(""), [i, s] = (0, import_react.useState)(r), [u, p] = (0, import_react.useState)(r), m = (0, import_react.useRef)(r), y = (0, import_react.useRef)(r), w = (0, import_react.useRef)(null), T = (0, import_react.useCallback)(() => {
    const v = ae(e, d);
    if (w.current || m.current === v)
      return;
    m.current = y.current, s(m.current);
    const I = y.current.split(""), P = v.split("").map((O, F) => {
      const B = I[F], D = d.indexOf(B);
      return B === O || D === 0 && !d.includes(O) ? B : d[(D + 1) % d.length];
    }).join("");
    y.current = P, p(y.current), w.current = setTimeout(() => {
      w.current = null, T();
    }, c);
  }, [d, c, e]);
  (0, import_react.useEffect)(() => {
    w.current && (clearTimeout(w.current), w.current = null), T();
  }, [T]), (0, import_react.useEffect)(() => () => {
    w.current && (clearTimeout(w.current), w.current = null);
  }, []);
  let S, k;
  return _ === "right" ? (S = [...i.split(""), ...E(i, d, h)], k = [...u.split(""), ...E(u, d, h)]) : (S = [...E(i, d, h), ...i.split("")], k = [...E(u, d, h), ...u.split("")]), import_react.default.createElement("div", { ...t2, className: C(re, A), style: {
    "--border-color": o,
    "--border-width": a,
    "--color": g,
    "--font-size": V
  } }, S.map((v, I) => import_react.default.createElement(oe, { key: `split-flap-${I}`, background: f, borderWidth: a, characterWidth: l, prevValue: v === " " ? " " : v, step: c, textColor: g, value: k[I] === " " ? " " : k[I], withSound: n })));
}
export {
  le as default
};
/*! Bundled license information:

react-split-flap-display/dist/index.js:
  (*! howler.js v2.2.4 | (c) 2013-2020, James Simpson of GoldFire Studios | MIT License | howlerjs.com *)
  (*! Spatial Plugin *)
*/
//# sourceMappingURL=react-split-flap-display.js.map
